{"version":3,"sources":["linkedList.js","index.js"],"names":["Node","value","next","LinkedList","length","head","ele","node","current","position","index","pre","str","indexOf","removeAt","size","list","append","console","log","insert","toString"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKH;;AAEA,IAAIW,OAAO,IAAIb,sBAAJ,EAAX;AACAa,KAAKC,MAAL,CAAY,CAAZ;AACAD,KAAKC,MAAL,CAAY,CAAZ;AACAD,KAAKC,MAAL,CAAY,CAAZ;AACAD,KAAKC,MAAL,CAAY,CAAZ;AACAD,KAAKC,MAAL,CAAY,CAAZ;AACAC,QAAQC,GAAR,CAAYH,IAAZ;AACAE,QAAQC,GAAR,CAAYH,KAAKF,QAAL,CAAc,CAAd,CAAZ;AACAI,QAAQC,GAAR,CAAYH,KAAKF,QAAL,CAAc,CAAd,CAAZ;AACAI,QAAQC,GAAR,CAAYH,IAAZ;AACAA,KAAKI,MAAL,CAAY,CAAZ,EAAc,CAAd;AACAJ,KAAKI,MAAL,CAAY,CAAZ,EAAc,EAAd;AACAF,QAAQC,GAAR,CAAYH,IAAZ;AACAE,QAAQC,GAAR,CAAYH,KAAKK,QAAL,EAAZ","file":"linkedList.21c0f417.map","sourceRoot":"..","sourcesContent":["class Node {\r\n  constructor(value) {\r\n    this.value = value;\r\n    this.next = null;\r\n  }\r\n}\r\n\r\nexport class LinkedList {\r\n  constructor() {\r\n    this.length = 0;\r\n    this.head = null;\r\n  }\r\n\r\n  /**\r\n   *尾部追加\r\n   *\r\n   * @param {*} ele\r\n   * @returns\r\n   * @memberof LinkedList\r\n   */\r\n  append(ele) {\r\n    let node = new Node(ele);\r\n    let current = null;\r\n\r\n    if (this.head === null) {\r\n      this.head = node;\r\n    } else {\r\n      current = this.head;\r\n\r\n      while (current.next) {\r\n        current = current.next;\r\n      }\r\n\r\n      current.next = node;\r\n    }\r\n\r\n    this.length++;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *根据位置删除\r\n   *\r\n   * @param {number} position\r\n   * @returns {Node}\r\n   * @memberof LinkedList\r\n   */\r\n  removeAt(position) {\r\n    if (position <= -1 || position >= this.length) {\r\n      return null;\r\n    }\r\n\r\n    let index = 0,\r\n      pre = null,\r\n      current = this.head;\r\n\r\n    if (position === 0) {\r\n      this.head = current.next;\r\n    } else {\r\n      while (index < position) {\r\n        index++;\r\n        pre = current;\r\n        current = current.next;\r\n      }\r\n\r\n      pre.next = current.next;\r\n    }\r\n\r\n    this.length--;\r\n\r\n    return current.value;\r\n  }\r\n\r\n  /**\r\n   *任意位置插入元素\r\n   *\r\n   * @param {number} position\r\n   * @param {*} ele\r\n   * @returns {boolean}\r\n   * @memberof LinkedList\r\n   */\r\n  insert(position, ele) {\r\n    if (position < 0 || position >= this.length) {\r\n      return false;\r\n    }\r\n    let current = this.head,\r\n      node = new Node(ele),\r\n      pre = null,\r\n      index = 0;\r\n    if (position === 0) {\r\n      node.next = current;\r\n      this.head = node;\r\n    } else {\r\n      while (index < position) {\r\n        index++;\r\n        pre = current;\r\n        current = current.next;\r\n      }\r\n\r\n      node.next = current;\r\n      pre.next = node;\r\n    }\r\n    this.length++;\r\n    return true;\r\n  }\r\n\r\n  toString() {\r\n    let current = this.head,\r\n      str = '';\r\n\r\n    while (current) {\r\n      str += current.value;\r\n      current = current.next;\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   *查找元素是否存在于列表中，如果存在返回位置，不存在返回-1\r\n   *\r\n   * @param {*} ele\r\n   * @returns {number}\r\n   * @memberof LinkedList\r\n   */\r\n  indexOf(ele) {\r\n    let current = this.head,\r\n      index = 0;\r\n    while (current) {\r\n      if (current.value === ele) {\r\n        return index;\r\n      }\r\n      index++;\r\n      current = current.next;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   *删除元素\r\n   *\r\n   * @param {*} ele\r\n   * @returns {number}\r\n   * @memberof LinkedList\r\n   */\r\n  remove(ele) {\r\n    const index = this.indexOf(ele);\r\n    this.removeAt(index);\r\n    return index;\r\n  }\r\n\r\n  size() {\r\n    return this.length;\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.size() === 0;\r\n  }\r\n\r\n  getHead() {\r\n    return this.head;\r\n  }\r\n}\r\n","import { LinkedList } from './linkedList.js';\r\n\r\nlet list = new LinkedList();\r\nlist.append(1);\r\nlist.append(2);\r\nlist.append(3);\r\nlist.append(4);\r\nlist.append(5);\r\nconsole.log(list);\r\nconsole.log(list.removeAt(0));\r\nconsole.log(list.removeAt(1));\r\nconsole.log(list);\r\nlist.insert(0,0);\r\nlist.insert(2,10);\r\nconsole.log(list);\r\nconsole.log(list.toString())\r\n\r\n"]}